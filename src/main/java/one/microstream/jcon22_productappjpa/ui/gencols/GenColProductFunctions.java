
package one.microstream.jcon22_productappjpa.ui.gencols;

import com.flowingcode.vaadin.addons.ironicons.ImageIcons;
import com.rapidclipse.framework.server.data.renderer.RenderedComponent;
import com.rapidclipse.framework.server.ui.UIUtils;
import com.vaadin.flow.component.ClickEvent;
import com.vaadin.flow.component.ComponentEvent;
import com.vaadin.flow.component.ComponentEventListener;
import com.vaadin.flow.component.button.Button;
import com.vaadin.flow.component.button.ButtonVariant;
import com.vaadin.flow.component.dialog.Dialog;
import com.vaadin.flow.component.icon.VaadinIcon;
import com.vaadin.flow.component.orderedlayout.HorizontalLayout;

import one.microstream.jcon22_productappjpa.dal.ProductDAO;
import one.microstream.jcon22_productappjpa.domain.Product;
import one.microstream.jcon22_productappjpa.ui.PopupProduct;
import one.microstream.jcon22_productappjpa.ui.ViewProducts;


public class GenColProductFunctions extends HorizontalLayout implements RenderedComponent<Product>
{
	
	private Product value;
	
	/**
	 *
	 */
	public GenColProductFunctions()
	{
		super();
		this.initUI();
	}
	
	@Override
	public void renderComponent(final Product value)
	{
		this.value = value;
	}
	
	/**
	 * Event handler delegate method for the {@link Button} {@link #buttonEdit}.
	 *
	 * @see ComponentEventListener#onComponentEvent(ComponentEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void buttonEdit_onClick(final ClickEvent<Button> event)
	{
		final ViewProducts parent = UIUtils.getNextParent(this, ViewProducts.class);
		final Dialog       dialog = new Dialog();

		dialog.add(new PopupProduct(this.value, () -> {
			parent.refreshGrid();
		}));

		dialog.setWidth("50%");
		dialog.setHeight("70%");
		dialog.open();
	}
	
	/**
	 * Event handler delegate method for the {@link Button} {@link #buttonDelete}.
	 *
	 * @see ComponentEventListener#onComponentEvent(ComponentEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void buttonDelete_onClick(final ClickEvent<Button> event)
	{
		new ProductDAO().remove(this.value);
		UIUtils.getNextParent(this, ViewProducts.class).refreshGrid();
	}

	/* WARNING: Do NOT edit!<br>The content of this method is always regenerated by the UI designer. */
	// <generated-code name="initUI">
	private void initUI()
	{
		this.buttonEdit   = new Button();
		this.buttonDelete = new Button();
		
		this.setSpacing(false);
		this.buttonEdit.addThemeVariants(ButtonVariant.LUMO_TERTIARY);
		this.buttonEdit.setIcon(ImageIcons.EDIT.create());
		this.buttonDelete.addThemeVariants(ButtonVariant.LUMO_TERTIARY);
		this.buttonDelete.setIcon(VaadinIcon.TRASH.create());
		
		this.buttonEdit.setSizeUndefined();
		this.buttonDelete.setSizeUndefined();
		this.add(this.buttonEdit, this.buttonDelete);
		this.setSizeUndefined();
		
		this.buttonEdit.addClickListener(this::buttonEdit_onClick);
		this.buttonDelete.addClickListener(this::buttonDelete_onClick);
	} // </generated-code>
	
	// <generated-code name="variables">
	private Button buttonEdit, buttonDelete;
	// </generated-code>

}
